let jwtStrategy,extractJwt,authConfig;_170‍.x([["jwtAuthStrategy",()=>jwtAuthStrategy]]);_170‍.w("passport-jwt/lib/strategy",[["default",["jwtStrategy"],function(v){jwtStrategy=v}]]);_170‍.w("passport-jwt/lib/extract_jwt",[["default",["extractJwt"],function(v){extractJwt=v}]]);_170‍.w("./authConfig",[["default",["authConfig"],function(v){authConfig=v}]]);




       let jwtAuthStrategy = new jwtStrategy({
    secretOrKey: authConfig.key,
    jwtFromRequest: extractJwt.fromAuthHeaderAsBearerToken()
}, async (token, done) => {
    try {
        return done(null, token.user);
    } catch (error) {
        return done(error);
    }
})